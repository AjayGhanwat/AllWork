package com.bridgelabz.googlemapdemo;

import android.Manifest;
import android.annotation.SuppressLint;
import android.content.pm.PackageManager;
import android.location.Address;
import android.location.Geocoder;
import android.location.Location;
import android.location.LocationListener;
import android.support.v4.app.ActivityCompat;
import android.support.v4.app.FragmentActivity;
import android.os.Bundle;
import android.telephony.CellLocation;
import android.telephony.TelephonyManager;
import android.text.TextUtils;
import android.util.Log;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Toast;

import com.google.android.gms.common.api.GoogleApiClient;
import com.google.android.gms.maps.CameraUpdateFactory;
import com.google.android.gms.maps.GoogleMap;
import com.google.android.gms.maps.OnMapReadyCallback;
import com.google.android.gms.maps.SupportMapFragment;
import com.google.android.gms.maps.model.BitmapDescriptorFactory;
import com.google.android.gms.maps.model.LatLng;
import com.google.android.gms.maps.model.MarkerOptions;

import java.io.IOException;
import java.util.List;

public class MapsActivity extends FragmentActivity implements OnMapReadyCallback, View.OnClickListener{

    private GoogleMap mMap;

    EditText searchPlace,changeType;
    Button searchPLaceMap,hospital,restaurant,school;

    int PROXIMITY_RADIUS = 500;
    double latitude = 19.050231,longitude = 72.917682;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_maps);

        searchPlace = (EditText) findViewById(R.id.searchableText);
        searchPLaceMap = (Button) findViewById(R.id.searchOnMap);
        changeType = (EditText) findViewById(R.id.changeType);
        hospital = (Button) findViewById(R.id.nearByHospital);
        restaurant = (Button) findViewById(R.id.nearByRestaurants);
        school = (Button) findViewById(R.id.nearBySchool);

        searchPLaceMap.setOnClickListener(this);
        hospital.setOnClickListener(this);
        restaurant.setOnClickListener(this);
        school.setOnClickListener(this);

        SupportMapFragment mapFragment = (SupportMapFragment) getSupportFragmentManager()
                .findFragmentById(R.id.map);
        mapFragment.getMapAsync(this);
    }

    @SuppressLint("MissingPermission")
    @Override
    public void onMapReady(GoogleMap googleMap) {
        mMap = googleMap;

        LatLng sydney = new LatLng(19.050218, 72.917703);
        //mMap.addMarker(new MarkerOptions().position(sydney).title("ME"));

        mMap.setMyLocationEnabled(true);
        mMap.moveCamera(CameraUpdateFactory.newLatLng(sydney));

    }

    @Override
    public void onClick(View view) {

        Object dataTrasfer[] = new Object[2];
        GetNearbyPlacesData getNearbyPlacesData = new GetNearbyPlacesData();

        switch (view.getId()){

            case R.id.searchOnMap :

                List<Address> addressesList = null;
                String location = searchPlace.getText().toString();

                if (location!= null && !location.equals("")){

                    mMap.clear();

                    Geocoder geocoder = new Geocoder(this);
                    try {
                        addressesList = geocoder.getFromLocationName(location, 1);
                    } catch (IOException e) {
                        e.printStackTrace();
                    }

                    Address address = addressesList.get(0);
                    LatLng latLng = new LatLng(address.getLatitude(), address.getLongitude());
                    mMap.addMarker(new MarkerOptions().position(latLng));
                    mMap.animateCamera(CameraUpdateFactory.newLatLng(latLng));

                }

                break;

            case R.id.nearByHospital :

                if (!TextUtils.isEmpty(changeType.getText()))
                    PROXIMITY_RADIUS = Integer.parseInt(changeType.getText().toString());

                mMap.clear();
                String hospital = "hospital";
                String url = getUrl(latitude, longitude, hospital);
                dataTrasfer[0] = mMap;
                dataTrasfer[1] = url;

                getNearbyPlacesData.execute(dataTrasfer);

                break;

            case R.id.nearByRestaurants :

                if (!TextUtils.isEmpty(changeType.getText()))
                PROXIMITY_RADIUS = Integer.parseInt(changeType.getText().toString());

                mMap.clear();
                String restaurant = "restaurant";
                url = getUrl(latitude, longitude, restaurant);
                dataTrasfer[0] = mMap;
                dataTrasfer[1] = url;

                getNearbyPlacesData.execute(dataTrasfer);

                break;

            case R.id.nearBySchool :

                if (!TextUtils.isEmpty(changeType.getText()))
                    PROXIMITY_RADIUS = Integer.parseInt(changeType.getText().toString());

                mMap.clear();
                String school = "school";
                url = getUrl(latitude, longitude, school);
                dataTrasfer[0] = mMap;
                dataTrasfer[1] = url;

                getNearbyPlacesData.execute(dataTrasfer);

                break;

        }
    }

    private String getUrl(double latitude, double longitude, String nearbyPlace){

        StringBuilder googlePlacesUrl = new StringBuilder("https://maps.googleapis.com/maps/api/place/nearbysearch/json?");
        googlePlacesUrl.append("location="+latitude+","+longitude);
        googlePlacesUrl.append("&radius="+PROXIMITY_RADIUS);
        googlePlacesUrl.append("&type="+nearbyPlace);
        googlePlacesUrl.append("&sensor=true");
        googlePlacesUrl.append("&key="+"AIzaSyDPG_iW97-O3hMDM4a9Heb0q6gvuEa9Fmo");

        Log.i("JSONData", "getUrl: "+googlePlacesUrl.toString());

        return googlePlacesUrl.toString();
    }
}

